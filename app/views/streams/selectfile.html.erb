<div class='container'>
  <h1>
	Select File
  </h1>
  <form role="form" accept-charset="UTF-8" action="/streams/savefile" method="post">
	<div class="form-group">
	  <label for="exampleInputFile">Acceleration</label>
	  <input type="file" id="acceFile">
	  <p class="help-block">Format = "StartTime StopTime Data"</p>
	</div>
	<div class="form-group">
	  <label for="exampleInputFile">Estimation</label>
	  <input type="file" id="estimationFile">
	  <p class="help-block">Format = "StartTime StopTime Actual Estimation"</p>
	</div>
	<div class="form-group">
	  <label for="exampleInputFile">LatLng</label>
	  <input type="file" id="latlngFile">
	  <p class="help-block">Format = "StartTime StopTime Lat Lng"</p>
	</div>
	<select class="form-control">
	  <option>Yusuke</option>
	  <option>Goto</option>
	</select>
	<button type="submit" class="btn btn-default" ="test">Submit</button>
  </form>
</div>


<script>
var log,acceData,estimationData,latlngData;
log = console.log.bind(console);
	function test(){
	  alert("test");
	  // Check for the various File API support.
	  if (window.File && window.FileReader && window.FileList && window.Blob) {
		// Great success! All the File APIs are supported.
		} else {
		alert('The File APIs are not fully supported in this browser.');
	  }
	}

	function readFile(evt){
      var reader, target;
      target = this.id;
      file = eval(target).files[0];
      reader = new FileReader();
      reader.readAsText(file, "UTF-8");
      reader.onprogress = function(evt) {
        return log(evt);
      };
	  reader.onload = function(evt) {
		var str;
		str = evt.target.result;
		if (target == "acceFile"){
		  acceDATA = str.split("\n");
		  alert("acceleration file");
		  } else if (target == "estimationFile") {
		  estimationData = str.split("\n");
		  alert(str)
		  alert("estimationFile");
		  } else {
		  latlngData = str.split("\n");
		  alert("latlng file");
		}
        if (colorData && latlngData) {
          //return fileJS.draw();
        }
      };
      reader.onerror = function(evt) {
		return log(evt);
	  }
	}
    function saveData(){
      var color, elm, from, fromTime, index, line, to, toTime, _i, _len, _results;
      color = "";
      from = {};
      to = {};
      fromTime = "";
      toTime = "";
      _results = [];
      for (index = _i = 0, _len = colorData.length; _i < _len; index = ++_i) {
        line = colorData[index];
        elm = line.split(" ");
        fromTime = elm[0];
        toTime = elm[1];
		
		//color = '#';
		//colorをrgb(r,g,b)の形で表現する
        color = "rgb(";

		color += Math.floor(parseFloat(elm[2]));
		color += ',';
		color += Math.floor(parseFloat(elm[3]));
		color += ',';
		color += Math.floor(parseFloat(elm[4]));
		color += ')';
		
		from = getLatlng(fromTime);
        to = getLatlng(toTime);
        //_results.push(mapJS.drawLine(from, to, color));
      }
      return _results;
	}

    function getLatlng(time) {
      var elm, lat, line, lng, tmp, _i, _len, _ref;
      tmp = "";
      lat = "";
      lng = "";
      for (_i = 0, _len = latlngData.length; _i < _len; _i++) {
        line = latlngData[_i];
        if (tmp === "") {
          tmp = line.split(" ");
          continue;
        }
        elm = line.split(" ");
        if ((tmp[0] * 1 <= (_ref = time * 1) && _ref < elm[0] * 1)) {
          lat = tmp[1] * 1 + (elm[1] - tmp[1]) * ((time - tmp[0]) / (elm[0] - tmp[0]));
          lng = tmp[2] * 1 + (elm[2] - tmp[2]) * ((time - tmp[0]) / (elm[0] - tmp[0]));
          if (!(parseInt(lat) === 35)) {
            log(lat + ":" + lng);
          }
          return {
            lat: lat,
            lng: lng
          };
        }
        tmp = elm;
      }
    },

	//リスナーに追加しておく
	document.getElementById('acceFile').addEventListener('change', readFile, false);
	document.getElementById('estimationFile').addEventListener('change', readFile, false);
</script>
