<div class="container">
	<h1> SHOW TEST </h1>
	<div class="test" align="center">
		<canvas id="myChart" width="1000" height="500"></canvas>
	</div>

	<div id='dataField' class='row'>
		<div class="col-md-3">
			<div class="panel panel-default">
				<div class="panel-heading">X Data</div>
				<div id='x_data'class="panel-body">
					<ul>
						<li class='max'>Max:</li>
						<li class='min'>Min:</li>
						<li class='ave'>Ave:</li>
						<li class='std'>Std:</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="panel panel-default">
				<div class="panel-heading">Y Data</div>
				<div id='y_data'class="panel-body">
					<ul>
						<li class='max'>Max:</li>
						<li class='min'>Min:</li>
						<li class='ave'>Ave:</li>
						<li class='std'>Std:</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="panel panel-default">
				<div class="panel-heading">Z Data</div>
				<div id='z_data'class="panel-body">
					<ul>
						<li class='max'>Max:</li>
						<li class='min'>Min:</li>
						<li class='ave'>Ave:</li>
						<li class='std'>Std:</li>
					</ul>
				</div>
			</div>
		</div>
		<div class="col-md-3">
			<div class="panel panel-default">
				<div class="panel-heading">Time Data</div>
				<div id='time_data'class="panel-body">
					<ul>
						<li class='max'>Max:</li>
						<li class='min'>Min:</li>
						<li class='ave'>Ave:</li>
						<li class='std'>Std:</li>
					</ul>
				</div>
			</div>
		</div>
	</div>
</div>


<% content_for :page_javascript do %>
	<%= javascript_include_tag "Chart" %>
	<script>
	  $(document).ready(function(){
			alert(gon.x.length)
			alert(gon.y.length)
			alert(gon.z.length)
			alert(gon.t.length)
			var data = {
				labels : gon.t,
				datasets : [
				{
					fillColor : "rgba(220,220,220,0.5)",
					strokeColor : "rgba(123,150,221,1)",
					pointColor : "rgba(220,220,220,1)",
					pointStrokeColor : "#fff",
					data : gon.x
				},
				{
					fillColor : "rgba(220,220,220,0.5)",
					strokeColor : "rgba(226,149,21,1)",
					pointColor : "rgba(220,220,220,1)",
					pointStrokeColor : "#fff",
					data : gon.y
				},
				{
					fillColor : "rgba(151,187,205,0.5)",
					strokeColor : "rgba(228,97,69,1)",
					pointColor : "rgba(151,187,205,1)",
					pointStrokeColor : "#fff",
					data : gon.z
				}
				] 
			} 
			var option = {
				pointDot:false,
				datasetFill:false,
				bezierCurve:false,

				//Boolean - If we want to override with a hard coded scale
				scaleOverride : true,

				//** Required if scaleOverride is true **
				//Number - The number of steps in a hard coded scale
				scaleSteps : 8,
				//Number - The value jump in the hard coded scale
				scaleStepWidth : 5,
				//Number - The scale starting value
				scaleStartValue : -20,
			}
			var ctx = document.getElementById("myChart").getContext("2d"); 
			new Chart(ctx).Line(data,option);

			//統計量の記述
			//alert("Max of x is " + Math.max.apply(null, gon.x));
			//alert("Min of x is " + Math.min.apply(null, gon.x));
			var statistics;
			$("#x_data").find(".max").text("Max: " + Math.max.apply(null, gon.x));
			$("#x_data").find(".min").text("Min: " + Math.min.apply(null, gon.x));
			statistics = average(gon.x);
			$("#x_data").find(".ave").text("Ave: " + statistics[0]);
			$("#x_data").find(".std").text("Std: " + statistics[1]);

			$("#y_data").find(".max").text("Max: " + Math.max.apply(null, gon.y));
			$("#y_data").find(".min").text("Min: " + Math.min.apply(null, gon.y));
			statistics = average(gon.y);
			$("#y_data").find(".ave").text("Ave: " + statistics[0]);
			$("#y_data").find(".std").text("Std: " + statistics[1]);

			$("#z_data").find(".max").text("Max: " + Math.max.apply(null, gon.z));
			$("#z_data").find(".min").text("Min: " + Math.min.apply(null, gon.z));
			statistics = average(gon.z);
			$("#z_data").find(".ave").text("Ave: " + statistics[0]);
			$("#z_data").find(".std").text("Std: " + statistics[1]);

			var st = subtime(gon.t);
			$("#time_data").find(".max").text("Max: " + Math.max.apply(null, st));
			$("#time_data").find(".min").text("Min: " + Math.min.apply(null, st));
			statistics = average(st);
			$("#time_data").find(".ave").text("Ave: " + statistics[0]);
			$("#time_data").find(".std").text("Std: " + statistics[1]);
		});
		function average(data){
			var ave = 0;
			for(i=0;i<data.length;i++)ave = ave+data[i];
			ave=ave/data.length;

			var varia=0;
			for(i=0; i<data.length;i++){
				varia = varia + Math.pow(data[i] - ave, 2);
			}
			varia = varia/(data.length-1);

			return [ave, Math.sqrt(varia,2)];
		}
		function subtime(data){
			var st = new Array();
			for(i=0; i<data.length-1; i++){
				st.push(data[i+1] - data[i]);
			}
			return st;
		}
	</script>
<% end %>
